#question 2->
from itertools import groupby

s = input()
for key, group in groupby(s):
    print((len(list(group)), int(key)), end=' ')

#output-> 
12456
(1, 1) (1, 2) (1, 4) (1, 5) (1, 6) 

#question 3->
if __name__ == '__main__':
    a = int(input())
    b = int(input())
    print(a+b)
    print(a-b)
    print(a*b)

#output-> 
1
2
3
-1
2

#questiion 4 ->

def minion_game(string):   
    vowels = 'AEIOU'
    kevin_score = 0
    stuart_score = 0
    n = len(string)

    for i in range(n):
        if string[i] in vowels:
            kevin_score += n - i
        else:
            stuart_score += n - i

    if kevin_score > stuart_score:
        print("Kevin", kevin_score)
    elif kevin_score < stuart_score:
        print("Stuart", stuart_score)
    else:
        print("Draw")

if __name__ == '__main__':
    s = input()
    minion_game(s)

#output-> 
2235
Stuart 10

#question 5
def is_leap(year):    
    leap = False

    # Write your logic here
    if year % 4 == 0:
        if year % 100 == 0:
            if year % 400 == 0:
                leap = True
            else:
                leap = False
        else:
            leap = True
    else:
        leap = False
    return leap

year = int(input())
print(is_leap(year))

#output->
1990
False

#question7
from itertools import combinations  #question7

n = int(input())
letters = input().split()
k = int(input())
combos = list(combinations(letters, k))
count_a = sum(1 for combo in combos if 'a' in combo)
probability = count_a / len(combos)
print(f"{probability:.4f}")

#output->
4
j k l u
2
0.0000

if __name__ == '__main__': #question 8
    n = int(input())
    integer_list = map(int, input().split())
    if __name__ == '__main__':
        t = tuple(integer_list)
        print(hash(t))
#output->
1
11
-7368095585195828856

 #question 9
if __name__ == '__main__': 
    n = int(input())
    student_marks = {}
    for _ in range(n):
        line = input().split()
        name = line[0]
        scores = list(map(float, line[1:]))
        student_marks[name] = scores
    query_name = input()
    average = sum(student_marks[query_name]) / len(student_marks[query_name])
    print(f"{average:.2f}")

#output->
3
krishna 1 2 3
arjun 4 5 6
malika 7 8 9
malika
8.00

#question 10 
def print_formatted(number):     
    width = len(bin(number)) - 2

    for i in range(1, number + 1):
        dec_str = str(i).rjust(width)
        oct_str = oct(i)[2:].rjust(width)
        hex_str = hex(i)[2:].upper().rjust(width)
        bin_str = bin(i)[2:].rjust(width)

        print(dec_str, oct_str, hex_str, bin_str)
if __name__ == '__main__':
    n = int(input())
    print_formatted(n)

#output->
51
     1      1      1      1
     2      2      2     10
     3      3      3     11
     4      4      4    100
     5      5      5    101
     6      6      6    110
     7      7      7    111
     8     10      8   1000
     9     11      9   1001
    10     12      A   1010
    11     13      B   1011
    12     14      C   1100
    13     15      D   1101
    14     16      E   1110
    15     17      F   1111
    16     20     10  10000
    17     21     11  10001
    18     22     12  10010
    19     23     13  10011
    20     24     14  10100
    21     25     15  10101
    22     26     16  10110
    23     27     17  10111
    24     30     18  11000
    25     31     19  11001
    26     32     1A  11010
    27     33     1B  11011
    28     34     1C  11100
    29     35     1D  11101
    30     36     1E  11110
    31     37     1F  11111
    32     40     20 100000
    33     41     21 100001
    34     42     22 100010
    35     43     23 100011
    36     44     24 100100
    37     45     25 100101
    38     46     26 100110
    39     47     27 100111
    40     50     28 101000
    41     51     29 101001
    42     52     2A 101010
    43     53     2B 101011
    44     54     2C 101100
    45     55     2D 101101
    46     56     2E 101110
    47     57     2F 101111
    48     60     30 110000
    49     61     31 110001
    50     62     32 110010
    51     63     33 110011

#question 1 
Request Id: 139dcc10-698d-4e90-9403-347fefdf0300 Correlation Id: 332ba1a1-10f1-5000-3b65-6470367bcbe0 Timestamp: 2025-05-24T04:22:27Z Message: AADSTS90072: User account 'cvenkat.dhanush@gmail.com' from identity provider 'live.com' does not exist in tenant 'Celebal Technologies Private Limited' and cannot access the application '00000003-0000-0ff1-ce00-000000000000'(Office 365 SharePoint Online) in that tenant. The account needs to be added as an external user in the tenant first. Sign out and sign in again with a different Azure Active Directory user account
#question 6
Cannot read properties of undefined (reading 'course_excel_name')
Server issues from the LMS
