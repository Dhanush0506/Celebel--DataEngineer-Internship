#Question 1

import math
import os
import random
import re
import sys

def solve(s):return ' '.join(word.capitalize() for word in s.split(' '))

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = solve(s)

    fptr.write(result + '\n')

    fptr.close()

chris alan
Chris Alan

#Question 2

def average(array):
    distinct_values = set(array)
    return sum(distinct_values) / len(distinct_values)

if __name__ == '__main__':
    n = int(input())
    arr = list(map(int, input().split()))
    result = average(arr)
    print(result)

Sample Input

STDIN                                       Function
-----                                       --------
10                                          arr[] size N = 10
161 182 161 154 176 170 167 171 170 174     arr = [161, 181, ..., 174]
Sample Output

169.375

#Question 3 

import textwrap

def wrap(string, max_width):
    return textwrap.fill(string, max_width)


if __name__ == '__main__':
    string, max_width = input(), int(input())
    result = wrap(string, max_width)
    print(result)

Sample Input 0

ABCDEFGHIJKLIMNOQRSTUVWXYZ
4
Sample Output 0

ABCD
EFGH
IJKL
IMNO
QRST
UVWX
YZ

#Question 4

def print_rangoli(size):
    # your code goes here
    import string
    alphabet = string.ascii_lowercase

    lines = []
    width = 4 * size - 3  # total width of each line

    for i in range(size):
        left_part = alphabet[size-1:i:-1]  # letters from outer to just after center
        center = alphabet[i]                # center letter
        right_part = alphabet[i+1:size]    # letters from after center to outer
        row = '-'.join(left_part + center + right_part)
        lines.append(row.center(width, '-'))

    # Print the rangoli pattern (top half + bottom half)
    print('\n'.join(lines[::-1] + lines[1:]))

if __name__ == '__main__':
    n = int(input())
    print_rangoli(n)

Sample Input

5
Sample Output

--------e--------
------e-d-e------
----e-d-c-d-e----
--e-d-c-b-c-d-e--
e-d-c-b-a-b-c-d-e
--e-d-c-b-c-d-e--
----e-d-c-d-e----
------e-d-e------
--------e--------

#Question 5

def merge_the_tools(string, k):
    # your code goes here
 for i in range(0, len(string), k):
        substring = string[i:i+k]
        seen = set()
        result = []
        for ch in substring:
            if ch not in seen:
                seen.add(ch)
                result.append(ch)
        print(''.join(result))
if __name__ == '__main__':
    string, k = input(), int(input())
    merge_the_tools(string, k)

Sample Input

STDIN       Function
-----       --------
AABCAAADA   s = 'AABCAAADA'
3           k = 3
Sample Output

AB
CA
AD

#Question 6

# Enter your code here. Read input from STDIN. Print output to STDOUT
from collections import Counter

if __name__ == '__main__':
    n = int(input())  # Number of shoes
    shoes = list(map(int, input().split()))
    shoe_counts = Counter(shoes)  # Count available shoes by size

    total_money = 0
    customers = int(input())  # Number of customers

    for _ in range(customers):
        size, price = map(int, input().split())
        if shoe_counts[size] > 0:
            total_money += price
            shoe_counts[size] -= 1  # Sell one shoe of this size

    print(total_money)

Sample Input

10
2 3 4 5 6 8 7 6 5 18
6
6 55
6 45
6 55
4 40
18 60
10 50
Sample Output

200

##Question 7

for _ in range(int(input())):
    try:
        a, b = input().split()
        result = int(a) // int(b)
        print(result)
    except (ZeroDivisionError, ValueError) as e:
        print("Error Code:", e)

Sample Input

3
1 0
2 $
3 1
Sample Output

Error Code: integer division or modulo by zero
Error Code: invalid literal for int() with base 10: '$'
3

#Question 8

import re

n = int(input())
for _ in range(n):
    pattern = input()
    try:
        re.compile(pattern)
        print("True")
    except re.error:
        print("False")

Sample Input

2
.*\+
.*+
Sample Output

True
False

#Question 9

n = int(input())
s = set(map(int, input().split()))
N = int(input())

for _ in range(N):
    command = input().split()
    cmd = command[0]

    if cmd == "pop":
        s.pop()
    elif cmd == "remove":
        value = int(command[1])
        s.remove(value)
    elif cmd == "discard":
        value = int(command[1])
        s.discard(value)

print(sum(s))

Sample Input

9
1 2 3 4 5 6 7 8 9
10
pop
remove 9
discard 9
discard 8
remove 7
pop 
discard 6
remove 5
pop 
discard 5
Sample Output
4





